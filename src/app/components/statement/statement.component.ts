import { Component, OnInit } from '@angular/core';
import { QueryObject } from '../../models/queryObject';
import { ReportCategory, ReportName, ResponseStatus } from '../../common/QSEnums';
import { VMContractorBill } from '../../models/smModels/vmContractorBill';
import { ReportService } from '../../services/reportService';
import { SupplyPlaceService } from '../../services/supplyPlaceService';
import { SupplyPlace } from '../../models/smModels/supplyPlace';
declare var $: any;

@Component({
  selector: 'app-statement',
  templateUrl: './statement.component.html',
  styleUrls: ['./statement.component.css'],
  providers: [ReportService, SupplyPlaceService]
})
export class StatementComponent implements OnInit {

  showEntry: boolean = false;
  reportCategory: number;
  searchItemType: number;
  lstReportCategory: any[];
  lstReportName: any[];
  lstSupplyPlace: SupplyPlace[] = new Array<SupplyPlace>();
  public objQueryObject: QueryObject = new QueryObject();
  public lstVMContractorBill: VMContractorBill[] = new Array<VMContractorBill>();
  constructor(private reportService: ReportService, private supplyPlaceService: SupplyPlaceService) { }

  ngOnInit() {
    this.objQueryObject.FromDate = new Date();
    this.objQueryObject.ToDate = new Date();
    this.lstReportCategory = ReportCategory;
    this.generatePrint();
    this.getAllSupplyPlace();
  }

  generatePrint() {
    $('.printMe').click(function () {
      $("#modalBody").print({
        globalStyles: true,
        mediaPrint: true,
        stylesheet: null,
        noPrintSelector: ".noprint",
        iframe: true,
        append: null,
        prepend: null,
        manuallyCopyFormValues: true,
        deferred: $.Deferred(),
        timeout: 750,
        title: null,
        doctype: '<!doctype html>'
      });
      // this.generateBarcode(this.objDryItemDemand.AutogeneratedNumber);
    });
  }

  getAllSupplyPlace() {
    this.supplyPlaceService.getAllSupplyPlace().subscribe((response) => {
      if (response.StatusCode == ResponseStatus.success) {
        this.lstSupplyPlace = response.ResponseObj;
        console.log("ItemType", response.ResponseObj);
      }
    });
  }

  getReportName() {
    this.lstReportName = ReportName.filter(r => r.CategoryID == this.reportCategory);
  }

  getReport() {
    this.objQueryObject.ItemTypeID = this.reportCategory;
    this.reportService.getButcheryStatement(this.objQueryObject).subscribe((response) => {
      if (response.StatusCode == ResponseStatus.success) {
        console.log(response.ResponseObj);
        $("#modalBody").html(response.ResponseObj);
        $('#contractorBillModal').modal("show");
      }
    });
  }

}
