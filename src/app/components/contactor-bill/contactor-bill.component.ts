import { Component, OnInit } from '@angular/core';
import { Contactor } from '../../models/smModels/Contactor';
import { ContactorService } from '../../services/contactorService';
import { ItemTypeService } from '../../services/itemTypeService';
import { ItemService } from '../../services/itemService';
import { ResponseStatus } from '../../common/QSEnums';
import { VMContractor } from '../../models/smModels/vmContractor';
import { ItemType } from '../../models/smModels/itemType';
import { Item } from '../../models/smModels/item';
import { QueryObject } from '../../models/queryObject';
import { ReportService } from '../../services/reportService';
import { VMContractorBill } from '../../models/smModels/vmContractorBill';
declare var $: any;

@Component({
  selector: 'app-contactor-bill',
  templateUrl: './contactor-bill.component.html',
  styleUrls: ['./contactor-bill.component.css'],
  providers: [ContactorService, ItemTypeService, ItemService,
    ReportService]
})
export class ContactorBillComponent implements OnInit {

  lstContractor: Contactor[] = new Array<Contactor>();
  lstVMContractor: VMContractor[] = new Array<VMContractor>();
  lstItemType: ItemType[] = new Array<ItemType>();
  lstAllItem: Item[] = new Array<Item>();
  lstAllItemByType: Item[] = new Array<Item>();
  public lstVMContractorBill: VMContractorBill[] = new Array<VMContractorBill>();
  public objQueryObject: QueryObject = new QueryObject();
  public objContractor: Contactor = new Contactor();
  public totalValue: number = 0;
  constructor(private ContactorService: ContactorService, private reportService: ReportService,
    private itemTypeService: ItemTypeService, private itemService: ItemService) { }

  ngOnInit() {
    this.getAllItem();
    this.getAllContactor();
    this.getAllItemType();
    this.generatePrint();
    this.lstVMContractorBill.push(new VMContractorBill());
    this.objContractor = new Contactor();
  }

  getAllItem() {
    this.itemService.getAllItem().subscribe((response) => {
      if (response.StatusCode == ResponseStatus.success) {
        this.lstAllItem = response.ResponseObj;
      }
    });
  }
  generatePrint() {
    $('.printMe').click(function () {
      $("#printConductorBill").print({
        globalStyles: true,
        mediaPrint: true,
        stylesheet: null,
        noPrintSelector: ".noprint",
        iframe: true,
        append: null,
        prepend: null,
        manuallyCopyFormValues: true,
        deferred: $.Deferred(),
        timeout: 750,
        title: null,
        doctype: '<!doctype html>'
      });
      // this.generateBarcode(this.objDryItemDemand.AutogeneratedNumber);
    });
  }
  getAllProduct() {
    console.log(this.lstAllItem);
    console.log("Item Type", this.objQueryObject.ItemTypeID);
    this.lstAllItemByType = this.lstAllItem.filter(i => i.ItemTypeID == this.objQueryObject.ItemTypeID);
    console.log(this.lstAllItemByType);
  }

  getAllItemType() {
    this.itemTypeService.getAllItemType().subscribe((response) => {
      if (response.StatusCode == ResponseStatus.success) {
        this.lstItemType = response.ResponseObj;
        console.log(response.ResponseObj);
        this.getAllContactor();
      }
    });
  }

  getAllContactor() {
    this.ContactorService.getAllContactor().subscribe((response) => {
      if (response.StatusCode == ResponseStatus.success) {
        this.lstVMContractor = response.ResponseObj;
      }
    });
  }

  getContractorBill() {

    console.log("contractor list", this.lstVMContractor);
    console.log("Contrctor ID", this.objQueryObject);
    this.totalValue = 0;
    var vmContractor = this.lstVMContractor.filter(v => v.Contactor.ContactorID == this.objQueryObject.ContractorID)[0];

    if (vmContractor) {
      this.objContractor = vmContractor.Contactor;
    }
    this.reportService.getButcheryContractorBill(this.objQueryObject).subscribe((response) => {
      if (response.StatusCode == ResponseStatus.success) {
        this.lstVMContractorBill = response.ResponseObj;

        this.lstVMContractorBill.forEach(bill => {
          this.totalValue += bill.Total;
        })


        $('#contractorBillModal').modal("show");
      }
    });
  }




}
