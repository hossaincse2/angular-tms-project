import { Component, OnInit } from '@angular/core';
import { QueryObject } from '../../models/queryObject';
import { UnitService } from '../../services/unitService';
import { PMReceiveService } from '../../services/pmReceiveService';
import { ResponseStatus } from '../../common/QSEnums';
import { VMUnit } from '../../models/smModels/vmUnit';
import { VMPMReceivable } from '../../models/smModels/vmPMReceivable';
declare var $: any;

@Component({
  selector: 'app-pmstock',
  templateUrl: './pmstock.component.html',
  styleUrls: ['./pmstock.component.css'],
  providers: [UnitService, PMReceiveService]
})
export class PMStockComponent implements OnInit {
  public objQueryObject: QueryObject = new QueryObject();
  public lstVMUnit: VMUnit[] = new Array<VMUnit>();
  public lstVMPMReceivable: VMPMReceivable[] = new Array<VMPMReceivable>();

  constructor(private unitService: UnitService, private pmReceiveService: PMReceiveService) { }

  ngOnInit() {
    this.objQueryObject.FromDate = new Date();
    this.objQueryObject.ToDate = new Date();
    // this.getAllUnit();
    this.getAllPMReceivable();
  }

  getAllUnit() {
    this.unitService.getAllUnit().subscribe((response) => {
      if (response.StatusCode == ResponseStatus.success) {
        this.lstVMUnit = response.ResponseObj;
      }
    });
  }

  getAllPMReceivable() {
    this.pmReceiveService.getPMStock().subscribe((response) => {
      if (response.StatusCode == ResponseStatus.success) {
        this.lstVMPMReceivable = response.ResponseObj;
        this.lstVMPMReceivable.forEach(detail => {
          detail.Balance = detail.Distribution - detail.Receieved;
          detail.Stock = detail.Receieved - detail.AuctionQty;

        })
      }
    });
  }

  printPmStock(){
    $('#Printheading').show();
    // $(document).on('click','.printMe',function () {
    $('#printMePM').on('click',function () {
      $("#printPmList").print({
        globalStyles: true,
        mediaPrint: false,
        stylesheet: null,
        noPrintSelector: ".noprint",
        iframe: true,
        append: null,
        prepend: null,
        manuallyCopyFormValues: true,
        deferred: $.Deferred(),
        timeout: 750,
        title: null,
        doctype: '<!doctype html>'
      });
      $('#Printheading').hide();
      // this.generateBarcode(this.objDryItemDemand.AutogeneratedNumber);
    });
  }

}
